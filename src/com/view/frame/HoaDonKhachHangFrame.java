/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.view.frame;

import com.controller.CTHDController;
import com.controller.GiamGiaController;
import com.controller.HoaDonKhachHangController;
import com.controller.KhachHangController;
import com.controller.NhanVienController;
import com.models.CTHDModel;
import com.models.DataContext;
import com.models.GiamGiaModel;
import com.models.HoaDonKhachHangModel;
import com.models.KhachHangModel;
import com.models.NhanVienModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Date;

/**
 *
 * @author DO THAO QUYEN
 */
public class HoaDonKhachHangFrame extends javax.swing.JFrame {

    /**
     * Creates new form HoaDonKhachHangFrame
     */
    public HoaDonKhachHangFrame() {
        initComponents();
        loadTableHD();
        combMaGiamGia();
        combMaNhanVien();
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lbMaHD = new javax.swing.JLabel();
        lbMaGiamGia = new javax.swing.JLabel();
        lbMaNV = new javax.swing.JLabel();
        lbSDTKH = new javax.swing.JLabel();
        lbNgLap = new javax.swing.JLabel();
        lbTongTien = new javax.swing.JLabel();
        lbThongTinHD = new javax.swing.JLabel();
        txtMaHD = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        NgayLap = new com.toedter.calendar.JDateChooser();
        txtTongTien = new javax.swing.JTextField();
        btXoa = new javax.swing.JButton();
        btCapNhap = new javax.swing.JButton();
        btRefresh = new javax.swing.JButton();
        cbMaGiamGia = new javax.swing.JComboBox<>();
        cbMaNV = new javax.swing.JComboBox<>();
        xxx = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbHDKH = new javax.swing.JTable();
        lbDSHoaDonKH = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbCTHD = new javax.swing.JTable();
        lbDSCTHD = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lbMaHD.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbMaHD.setText("Mã HD");
        jPanel2.add(lbMaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 74, 61, -1));

        lbMaGiamGia.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbMaGiamGia.setText("Mã Giảm Giá");
        jPanel2.add(lbMaGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 122, 93, -1));

        lbMaNV.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbMaNV.setText("Mã Nhân Viên");
        jPanel2.add(lbMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 219, 93, -1));

        lbSDTKH.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbSDTKH.setText("SĐT Khách Hàng");
        jPanel2.add(lbSDTKH, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 171, -1, -1));

        lbNgLap.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbNgLap.setText("Ngày Lập");
        jPanel2.add(lbNgLap, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 272, 90, -1));

        lbTongTien.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lbTongTien.setText("Tổng Tiền");
        jPanel2.add(lbTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(24, 325, 90, -1));

        lbThongTinHD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbThongTinHD.setText("Thông tin Hóa Đơn Khách Hàng");
        jPanel2.add(lbThongTinHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 23, 235, -1));

        txtMaHD.setEnabled(false);
        txtMaHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtMaHDMouseClicked(evt);
            }
        });
        jPanel2.add(txtMaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 71, 140, -1));
        jPanel2.add(txtSDT, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 168, 140, -1));

        NgayLap.setEnabled(false);
        jPanel2.add(NgayLap, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 266, 143, -1));
        jPanel2.add(txtTongTien, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 322, 143, -1));

        btXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resource/delete (1).png"))); // NOI18N
        btXoa.setText("Xóa");
        btXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btXoaActionPerformed(evt);
            }
        });
        jPanel2.add(btXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 390, -1, -1));

        btCapNhap.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btCapNhap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resource/edit (2).png"))); // NOI18N
        btCapNhap.setText("Cập Nhập");
        btCapNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCapNhapActionPerformed(evt);
            }
        });
        jPanel2.add(btCapNhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 390, -1, 30));

        btRefresh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resource/refresh-arrow.png"))); // NOI18N
        btRefresh.setText("Refresh ");
        btRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefreshActionPerformed(evt);
            }
        });
        jPanel2.add(btRefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 390, -1, 30));

        cbMaGiamGia.setEnabled(false);
        cbMaGiamGia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbMaGiamGiaMouseClicked(evt);
            }
        });
        cbMaGiamGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaGiamGiaActionPerformed(evt);
            }
        });
        jPanel2.add(cbMaGiamGia, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 119, 90, -1));

        cbMaNV.setEnabled(false);
        cbMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbMaNVActionPerformed(evt);
            }
        });
        jPanel2.add(cbMaNV, new org.netbeans.lib.awtextra.AbsoluteConstraints(129, 216, 90, -1));

        xxx.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/resource/background2.png"))); // NOI18N
        jPanel2.add(xxx, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 320, 510));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 485, Short.MAX_VALUE)
        );

        tbHDKH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HD", "Mã Giảm Giá", "SĐT Khách Hàng", "Mã Nhân Viên", "Ngày Lập", "Tổng Tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbHDKH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHDKHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbHDKH);

        lbDSHoaDonKH.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDSHoaDonKH.setText("Danh sách Hóa đơn Khách Hàng");

        tbCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã DU", "Số Lượng", "Giá"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbCTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbCTHDMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbCTHD);

        lbDSCTHD.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbDSCTHD.setText("Danh sách CTHD");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(lbDSCTHD, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lbDSHoaDonKH, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(lbDSHoaDonKH)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lbDSCTHD)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    DefaultTableModel modelHDKH, modelCTHD;

    public void loadTableHD() {
        modelHDKH = (DefaultTableModel) new DefaultTableModel();
        try {
            HoaDonKhachHangModel kh = new HoaDonKhachHangModel();
            modelHDKH = new DefaultTableModel();
            String tieuDe[] = {"Mã HD", "Mã Giảm Giá", "SĐT Khách Hàng", "Mã Nhân Viên", "Ngày Lập", "Tổng Tiền"};
            modelHDKH.setColumnIdentifiers(tieuDe);
            Object row[] = new Object[6];
            int i = 0;
            HoaDonKhachHangController.getInstance().LayDuLieu();
            while (i < DataContext.getInstance().getHoaDonKhachHangs().size()) {
                row[0] = DataContext.getInstance().getHoaDonKhachHangs().get(i).getMaHD();
                row[1] = DataContext.getInstance().getHoaDonKhachHangs().get(i).getMaGiamGia();
                row[2] = DataContext.getInstance().getHoaDonKhachHangs().get(i).getSDTKH();
                row[3] = DataContext.getInstance().getHoaDonKhachHangs().get(i).getMaNV();
                row[4] = DataContext.getInstance().getHoaDonKhachHangs().get(i).getNgayLap();
                row[5] = DataContext.getInstance().getHoaDonKhachHangs().get(i).getTongTien();
                i++;
                modelHDKH.addRow(row);
            }
        } catch (Exception e) {
        }
        tbHDKH.setModel(modelHDKH);
        setVisible(true);
    }

    public String checkError() {
        if (txtSDT.getText().equals("")) {
            return "Số điện thoại còn trống";
        } else if (txtSDT.getText().length() < 9 || txtSDT.getText().length() > 11) {
            return "Số điện thoại không hợp lệ";
        } else {
            try {
                Integer.parseInt(txtSDT.getText());
            } catch (Exception e) {
                return "Số điện thoại không hợp lệ!";
            }
        }

        if (txtTongTien.getText().equals("")) {
            try {
                int tongtiem = Integer.parseInt(txtTongTien.getText());
                if (tongtiem < 0) {
                    return "Tổng tiền không hợp lệ";
                }
            } catch (Exception e) {
                return "Tổng tiền không hợp lệ";
            }
            return "Tổng tiền còn trống";
        }
        return "";
    }

    public void loadTableCTHD() {
        modelCTHD = (DefaultTableModel) new DefaultTableModel();
        try {
            CTHDModel kh = new CTHDModel();
            modelCTHD = new DefaultTableModel();
            String tieuDe[] = {"Mã HD", "Mã DU", "Số Lượng", "Giá"};
            modelCTHD.setColumnIdentifiers(tieuDe);
            Object row[] = new Object[4];
            int i = 0;
            CTHDController.getInstance().LayDuLieu();
            while (i < DataContext.getInstance().getCTHDs().size()) {
                row[0] = DataContext.getInstance().getCTHDs().get(i).getMaHD();
                row[1] = DataContext.getInstance().getCTHDs().get(i).getMADU();
                row[2] = DataContext.getInstance().getCTHDs().get(i).getSoLuong();
                row[3] = DataContext.getInstance().getCTHDs().get(i).getGia();
                i++;
                modelCTHD.addRow(row);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        tbCTHD.setModel(modelCTHD);
        setVisible(true);
    }

    public void combMaGiamGia() {
        try {
            GiamGiaController.getInstance().LayDuLieu();
            for (GiamGiaModel i : DataContext.getInstance().getGiamGias()) {
                int maGiamGia = i.getMaGiamGia();
                cbMaGiamGia.addItem(String.valueOf(maGiamGia));
            }
        } catch (Exception e) {
        }
    }

    public void combMaNhanVien() {
        try {
            NhanVienController.getInstance().LayDuLieu();
            for (NhanVienModel i : DataContext.getInstance().getNhanViens()) {
                int maNV = i.getMaNV();
                cbMaNV.addItem(String.valueOf(maNV));
            }
        } catch (Exception e) {
        }
    }

    private void tbHDKHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHDKHMouseClicked
        int row = this.tbHDKH.getSelectedRow();
        try {

            if (row >= 0 && row <= tbHDKH.getRowCount()) {
                txtMaHD.setText(tbHDKH.getValueAt(row, 0).toString());
                cbMaGiamGia.setSelectedItem(tbHDKH.getValueAt(row, 1).toString());
                txtSDT.setText(tbHDKH.getValueAt(row, 2).toString());
                cbMaNV.setSelectedItem(tbHDKH.getValueAt(row, 3).toString());
                NgayLap.setDate((Date) tbHDKH.getModel().getValueAt(row, 4));
                txtTongTien.setText(tbHDKH.getValueAt(row, 5).toString());
            }
            loadTableHD();
        } catch (Exception e) {
        }

        tbCTHD.removeAll();
        Object row1[] = new Object[3];
        if (row >= 0 && row <= tbHDKH.getRowCount()) {
            try {
                CTHDController.getInstance().LayDuLieu();
                String mahd = txtMaHD.getText();
                for (CTHDModel cthd : DataContext.getInstance().getCTHDs()) {
                    if (mahd.equals(cthd.getMaHD())) {
                        row1[0] = cthd.getMADU();
                        row1[1] = cthd.getSoLuong();
                        row1[2] = cthd.getGia();
                        modelCTHD.addRow(row1);
                    }
                }
                tbCTHD.setModel(modelCTHD);
            } catch (Exception e) {
            }
            
        }
    }//GEN-LAST:event_tbHDKHMouseClicked

    private void btRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefreshActionPerformed
        txtMaHD.setText("");
        txtSDT.setText("");
        NgayLap.setDate(null);
        txtTongTien.setText("");
        cbMaGiamGia.setSelectedIndex(0);
        cbMaNV.setSelectedIndex(0);
    }//GEN-LAST:event_btRefreshActionPerformed

    private void btXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btXoaActionPerformed
        if (txtMaHD.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Chưa chọn hóa đơn xóa");
            return;
        }
        try {
            int maHD = Integer.parseInt(txtMaHD.getText());
            int result = JOptionPane.showConfirmDialog(this, "Bạn chắc chắn muốn xóa hóa đơn này này", "Xác nhận", JOptionPane.YES_NO_OPTION);
            if (result == JOptionPane.YES_OPTION) {
                if (HoaDonKhachHangController.getInstance().XoaHoaDonKhachHang(maHD) == true) {
                    JOptionPane.showMessageDialog(null, "Xóa hóa đơn thành công");
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa hóa đơn không thành công");
                }
            }
            loadTableHD();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btXoaActionPerformed

    private void cbMaGiamGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaGiamGiaActionPerformed

    }//GEN-LAST:event_cbMaGiamGiaActionPerformed

    private void cbMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbMaNVActionPerformed

    }//GEN-LAST:event_cbMaNVActionPerformed

    private void btCapNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCapNhapActionPerformed
        StringBuilder sb = new StringBuilder();
        var x = checkError();
        if (!x.equals("")) {
            JOptionPane.showConfirmDialog(null, x, "title", JOptionPane.DEFAULT_OPTION);
            return;
        }
        try {
            HoaDonKhachHangModel hd = new HoaDonKhachHangModel();
            hd.setSDTKH(txtSDT.getText());
            hd.setTongTien(Double.parseDouble(txtTongTien.getText()));
            int MaHD = Integer.parseInt(txtMaHD.getText());
            if (HoaDonKhachHangController.getInstance().SuaHoaDonKhachHang(MaHD, hd) == true) {
                JOptionPane.showMessageDialog(null, "Cập nhập hóa đơn thành công");
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhạp hóa đơn không thành công");
            }
            loadTableHD();
        } catch (Exception e) {
        }

    }//GEN-LAST:event_btCapNhapActionPerformed

    private void tbCTHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbCTHDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbCTHDMouseClicked

    private void cbMaGiamGiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbMaGiamGiaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cbMaGiamGiaMouseClicked

    private void txtMaHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtMaHDMouseClicked

    }//GEN-LAST:event_txtMaHDMouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser NgayLap;
    private javax.swing.JButton btCapNhap;
    private javax.swing.JButton btRefresh;
    private javax.swing.JButton btXoa;
    private javax.swing.JComboBox<String> cbMaGiamGia;
    private javax.swing.JComboBox<String> cbMaNV;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbDSCTHD;
    private javax.swing.JLabel lbDSHoaDonKH;
    private javax.swing.JLabel lbMaGiamGia;
    private javax.swing.JLabel lbMaHD;
    private javax.swing.JLabel lbMaNV;
    private javax.swing.JLabel lbNgLap;
    private javax.swing.JLabel lbSDTKH;
    private javax.swing.JLabel lbThongTinHD;
    private javax.swing.JLabel lbTongTien;
    private javax.swing.JTable tbCTHD;
    private javax.swing.JTable tbHDKH;
    private javax.swing.JTextField txtMaHD;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtTongTien;
    private javax.swing.JLabel xxx;
    // End of variables declaration//GEN-END:variables
}
